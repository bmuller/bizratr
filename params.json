{"tagline":"Synthesize business information from many sources","name":"Bizratr","google":"UA-19398875-1","body":"# BizRatr\r\nThis gem pulls in business data from a variety of sources and synthesizes a singular view of the business.  Right now [Facebook](http://facebook.com), [Yelp](http://yelp.com), [Factual](http://factual.com), [Google Places](http://google.com/places), and [Foursquare](http://foursquare.com) are used as sources.  Bizratr will collapse all of the matching sources into a singular view of each matching business (businesses from each source are intelligently merged into the lists from the other sources, so that there is one record per business).\r\n\r\n```ruby\r\n>> require 'bizratr'\r\n>> config = { \r\n     :foursquare => { :client_id => 'anid', :client_secret => 'asecret' },\r\n     :yelp => { :consumer_key => 'akey', :consumer_secret => 'asecret', \r\n                :token => 'atoken', :token_secret => 'atokensecret' },\r\n     :google_places => { :key => \"akey\" },\r\n     :factual => { :key => 'akey', :secret => 'asecret' },\r\n     :facebook => { :key => 'akey', :secret => 'asecret' }\r\n   }\r\n>> finder = BizRatr::UberClient.new(config)\r\n>> location = [40.729401, -73.996061] # this could be an address\r\n>> name = \"third rail coffee\"\r\n>> matches = finder.search_location(location, name)\r\n>> matches.first.rating # this will be an average across sources\r\n => 4.55\r\n>> matches.first.flattened_categories\r\n => [\"coffee shop\", \"food\", \"food & beverage > cafes\", \"coffee houses & tea houses\"]\r\n>> match = finder.search_location_strictly(location, name) # best name match\r\n => <Business [name=Third Rail Coffee, phone=6468250812, address=240 Sull...>\r\n>> match.total_users # total users who have checked in using any service\r\n => 8710\r\n>> match.total_reviews\r\n => 183\r\n>> match.total_checkins\r\n => 8710\r\n>> match.total_likes\r\n => 0\r\n>> match.phone\r\n => 6468250812\r\n>> match.website_normalized\r\n => \"http://thirdrailcoffee.com\"\r\n>> match.website_likes\r\n => {\"share_count\"=>75, \"like_count\"=>10, \"comment_count\"=>9, \"click_count\"=>6}\r\n```\r\n\r\nIn this example, the average of the ratings from any of the sources (normalized to a 5 point scale) is used as the rating.  Each result has address information, rating information, \"like\" information, and other relevant info.  Businesses that are returned from each search are merged, with matching results squashed (based on name/location/phone/etc).\r\n\r\nYou only need to specify the config options for the services you actually want to query.  You can sign up for each at the following locations:\r\n\r\n* Yelp: http://www.yelp.com/developers/getting_started\r\n* Google places: https://code.google.com/apis/console/b/0/\r\n* Foursquare: https://foursquare.com/oauth/\r\n* Factual: https://www.factual.com/api-keys/request\r\n* Facebook: https://developers.facebook.com/apps\r\n\r\n# License\r\nThe bizratr code is distributed under the GPLv3.","note":"Don't delete this file! It's used internally to help with page regeneration."}